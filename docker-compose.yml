version: "3.9"

services:
  flask-api:
    <<: &flask-api
      image: "ghcr.io/s-klimov/auth_sprint_1:dev"
      build:
        target: development_build
        context: .
        args:
          FLASK_ENV: development
        cache_from:
          - "ghcr.io/s-klimov/auth_sprint_1:dev"
          - "ghcr.io/s-klimov/auth_sprint_1:latest"
          - "*"
      depends_on:
        - db
        - redis
        - circuitbreaker
      networks:
        - webnet
      env_file: ./config/.env
    command: flask run -h 0.0.0.0

  db:
    image: "postgres:13.4-alpine"
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d/
    networks:
      - webnet
    env_file: ./config/.env

  redis:
    image: redis:6.2.5-alpine
    networks:
      - webnet

  circuitbreaker:
    container_name: circuitbreaker
    restart: always
    build:
      context: .
      dockerfile: Dockerfile_circuitbreaker
      target: development_build
      context: .
      args:
        FLASK_ENV: development
    environment:
      - FLASK_APP=app.py
      - FLASK_API=auth_sprint_2_flask-api_1
      - FLASK_ENV=development
    ports:
      - 8001:5000
    volumes:
      - ./proxy:/app
    networks:
      - webnet
    command: flask run -h 0.0.0.0


volumes:
  pgdata:

networks:
  webnet: