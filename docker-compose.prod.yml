version: "3.9"

services:
  caddy:
    image: "caddy:2.2.1"
    restart: unless-stopped
    env_file: ./config/.env
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy-config:/config
      - caddy-data:/data
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - flask-api
    networks:
        - proxynet

  flask-api:
    <<: &flask-api
      image: "ghcr.io/s-klimov/auth_sprint_1:latest"
      build:
        target: production_build
        args:
          FLASK_ENV: "production"
      restart: unless-stopped
    command: sh ./docker/flask-api/uwsgi.sh
    networks:
      - proxynet
    expose:
      - 5000

  circuitbreaker:
    container_name: circuitbreaker
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./proxy/Dockerfile
      target: development_build
      context: .
      args:
        FLASK_ENV: production
    environment:
      - FLASK_APP=app.py
      - FLASK_API=auth_sprint_2_flask-api_1
      - FLASK_ENV=production
    ports:
      - 8001:5000
    volumes:
      - ./proxy:/app
    networks:
      - webnet
    command: flask run -h 0.0.0.0

volumes:
  caddy-config:
  caddy-data:

networks:
  proxynet:
